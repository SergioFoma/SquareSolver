
#ifndef H_TEST
#define H_TEST

#include <stdio.h>
#include "solver.h"

//!---------------------------------------------------------------------------------------------------------------------
//!
//! @note Структура, состоящая из структуры coeff, содержащей коэффициенты квадратного уравнения, и структуры truResult,
//!       содеражащей правильное решение квадратного уравнения.
//!
//!--------------------------------------------------------------------------------------------------------------------- 
struct TestCaseData {
    struct Coefficients coeff;
    struct SolveResult trueResult;
};

//--------------------------------------------------------------------------------------------------------------
//!
//! @param[in] *lineCountRoots  *lineCountRoots - константная строка, содержащая ифнормацию о количестве корней.
//!
//! @note Переводит строку, содержащую информацию о количестве корней, в тип RootsCount.
//!
//--------------------------------------------------------------------------------------------------------------
RootsCount getRootsCountFromFile( const char* lineCountRoots );

void clearBufferFunction( FILE* testFile );

void readNumbersFromFile( FILE* testFile, TestCaseData* testCase );
//--------------------------------------------------------------------------------------------------------------
//!
//! @note Содержит массив из структур типа TestCaseData. Вызывает функцию test с параметром в виде этого массива.
//!
//--------------------------------------------------------------------------------------------------------------
void testFromFunction();

//------------------------------------------------------------------------------------------
//!
//! @note Считывает строки из файла. Создает массив, состоящей из структур типа TestCaseData.
//!       Вызывает функцию test с параметром в виде этого массива.
//!
//-------------------------------------------------------------------------------------------
int testFromFile(char* testName);

//---------------------------------------------------------------------------------------
//!
//! @note Содержит unit тесты, вызывает проверку на правильность корней и их количества.
//! Если обнаружено несовпадение - печатает о некорректности вычислений.
//!
//---------------------------------------------------------------------------------------
void runTestFromArray( const TestCaseData* testData, const size_t testCount );

//---------------------------------------------------------------------------------------------------------------------
//!
//! @param [in] AIOE   AIOE - структура типа AllInformationOfEquation, содеражащая коэффициенты квадратного уравнения.
//!
//! @return 1 при совпадении корней, 0 при различии.
//!
//! @note Проверяет, совпадают ли корректные ответы и вычисленные.
//!
//---------------------------------------------------------------------------------------------------------------------- 
int testSolve( TestCaseData AIOE);

//--------------------------------------------------------------------------------------------------------------------
//!
//! @param [in] AIOE   AIOE - структура типа AllInformationOfEquation, содеражащая коэффициенты квадратного уравнения.
//!
//! @note Печатает о несовпадении решений, если оно обнаружено, или ok, если все корректно.
//!
//---------------------------------------------------------------------------------------------------------------------
void printFail( TestCaseData AIOE);

#endif
